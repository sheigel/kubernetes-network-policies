apiVersion: v1
kind: Namespace
metadata:
  name:  ns2
  labels:
    name: ns2

---
#service to be consumed

apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx2
  namespace: ns2
spec:
  replicas: 2
  selector:
    matchLabels:
      role: nginx2
  template:
    metadata:
      labels:
        role: nginx2
    spec:
      containers:
      - name: nginx
        image: nginx
---
kind: Service
apiVersion: v1
metadata:
  name:  nginx2
  namespace: ns2
spec:
  selector:
    role: nginx2
  type: NodePort
  ports:
  - port:  80
    targetPort:  80

---
#service consumer of local svc

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ns2-nginx1-consumer
  namespace: ns2
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ns2-nginx1-consumer
  template:
    metadata:
      labels:
        app: ns2-nginx1-consumer
        role: consumer
    spec:
      containers:
      - name: ns2-nginx1-consumer
        image: ubuntu
        command:
          - /bin/sh
        args: 
          - "-c"
          - "apt update; apt install curl -y; while true; do curl -I -s -v nginx1.ns1; sleep 1;done"

---
#service consumer of remote svc

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ns2-nginx2-consumer
  namespace: ns2
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ns2-nginx2-consumer
  template:
    metadata:
      labels:
        app: ns2-nginx2-consumer
        role: consumer
    spec:
      containers:
      - name: ns2-nginx2-consumer
        image: ubuntu
        command:
          - /bin/sh
        args: 
          - "-c"
          - "apt update; apt install curl -y; while true; do curl -I -s -v nginx2.ns2; sleep 1;done"

---